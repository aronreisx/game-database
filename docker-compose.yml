version: '3.8'
services:
  #Nginx Service
  server:
    image: nginx:1.17
    container_name: server
    depends_on:
      - app
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ${APP_FOLDER}:/var/www/html
      - ./config/nginx/conf.d:/etc/nginx/conf.d/
    networks:
      - application

  #PHP Service
  app:
    build:
      context: docker
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    depends_on:
      - db
    working_dir: /var/www
    volumes:
      - ${APP_FOLDER}:/var/www/html
      # - ./config/php:/usr/local/etc/php/local.ini
    networks:
      - application
      - database

  #MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./database:/var/lib/mysql
      - ./config/mysql/initdb.d/:/docker-entrypoint-initdb.d/
      # - ./config/mysql/engine.cnf:/etc/mysql/conf.d
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - database

  #phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    ports:
      - "${PMA_PORT}:80"
    networks:
      - database

#Docker Networks
networks:
  application:
    driver: bridge
  database:
    driver: bridge

#Docker Volumes
volumes:
  database:
